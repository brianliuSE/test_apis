openapi: 3.0.0
info:
  title: Nudm_UECM
  description: "Nudm Context Management Service.  \nÂ© 2024, 3GPP Organizational Partners\
    \ (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).  \nAll rights reserved.\n"
  version: 1.3.0-alpha.6
externalDocs:
  description: "3GPP TS 29.503 Unified Data Management Services, version 18.5.0"
  url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.503/
servers:
- url: "{apiRoot}/nudm-uecm/v1"
  variables:
    apiRoot:
      description: apiRoot as defined in clause 4.4 of 3GPP TS 29.501.
      default: https://example.com
security:
- oAuth2ClientCredentials:
  - nudm-uecm
- {}
paths:
  /{ueId}/registrations:
    get:
      tags:
      - UECM Registration Info Retrieval
      summary: retrieve UE registration data sets
      operationId: GetRegistrations
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/VarUeId'
      - name: supported-features
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      - name: registration-dataset-names
        in: query
        description: List of UECM registration dataset names
        required: true
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/RegistrationDatasetNames'
      - name: single-nssai
        in: query
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snssai'
      - name: dnn
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Dnn'
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationDataSets'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: 406 Not Acceptable
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
  /{ueId}/registrations/send-routing-info-sm:
    post:
      tags:
      - SendRoutingInfoSM (Custom Operation)
      summary: Retreive addressing information for SMS delivery
      operationId: SendRoutingInfoSm
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingInfoSmRequest'
        required: true
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingInfoSmResponse'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
  /{ueId}/registrations/amf-3gpp-access:
    get:
      tags:
      - AMF 3Gpp-access Registration Info Retrieval
      summary: retrieve the AMF registration for 3GPP access information
      operationId: Get3GppRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/VarUeId'
      - name: supported-features
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amf3GppAccessRegistration'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: 406 Not Acceptable
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
    put:
      tags:
      - AMF registration for 3GPP access
      summary: register as AMF for 3GPP access
      operationId: 3GppRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Amf3GppAccessRegistration'
        required: true
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: "Contains the URI of the newly created resource, according\
                \ to the structure: {apiRoot}/nudm-uecm/v1/{ueId}/registrations/amf-3gpp-access"
              required: true
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amf3GppAccessRegistration'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amf3GppAccessRegistration'
        "204":
          description: No content
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      callbacks:
        deregistrationNotification:
          '{request.body#/deregCallbackUri}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DeregistrationData'
                required: true
              responses:
                "204":
                  description: Successful Notification response
                "200":
                  description: Successful Notification response with information to
                    UDM
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeregistrationRespData'
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "400":
                  description: Bad request
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "401":
                  description: Unauthorized
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "403":
                  description: Forbidden
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "404":
                  description: Not Found
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "411":
                  description: Length Required
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "413":
                  description: Content Too Large
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "415":
                  description: Unsupported Media Type
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "429":
                  description: Too Many Requests
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "500":
                  description: Internal Server Error
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "502":
                  description: Bad Gateway
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "503":
                  description: Service Unavailable
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                default:
                  description: Unexpected error
        pcscfRestorationNotification:
          '{request.body#/pcscfRestorationCallbackUri}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/PcscfRestorationNotification'
                required: true
              responses:
                "204":
                  description: Successful Notification response
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "400":
                  description: Bad request
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "401":
                  description: Unauthorized
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "403":
                  description: Forbidden
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "404":
                  description: Not Found
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "409":
                  description: Conflict
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "411":
                  description: Length Required
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "413":
                  description: Content Too Large
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "415":
                  description: Unsupported Media Type
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "429":
                  description: Too Many Requests
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "500":
                  description: Internal Server Error
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "502":
                  description: Bad Gateway
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "503":
                  description: Service Unavailable
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                default:
                  description: Unexpected error
        dataRestorationNotification:
          '{request.body#/dataRestorationCallbackUri}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DataRestorationNotification'
                required: true
              responses:
                "204":
                  description: Successful Notification response
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "400":
                  description: Bad request
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "401":
                  description: Unauthorized
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "403":
                  description: Forbidden
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "404":
                  description: Not Found
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "409":
                  description: Conflict
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "411":
                  description: Length Required
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "413":
                  description: Content Too Large
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "415":
                  description: Unsupported Media Type
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "429":
                  description: Too Many Requests
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "500":
                  description: Internal Server Error
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "502":
                  description: Bad Gateway
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "503":
                  description: Service Unavailable
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                default:
                  description: Unexpected error
        reauthNotification:
          '{request.body#/reauthNotifyCallbackUri}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ReauthNotificationInfo'
                required: true
              responses:
                "204":
                  description: Successful Notification response
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "400":
                  description: Bad request
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "401":
                  description: Unauthorized
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "403":
                  description: Forbidden
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "404":
                  description: Not Found
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "411":
                  description: Length Required
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "413":
                  description: Content Too Large
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "415":
                  description: Unsupported Media Type
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "429":
                  description: Too Many Requests
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "500":
                  description: Internal Server Error
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "502":
                  description: Bad Gateway
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "503":
                  description: Service Unavailable
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                default:
                  description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:amf-registration:write
    patch:
      tags:
      - Parameter update in the AMF registration for 3GPP access
      summary: Update a parameter in the AMF registration for 3GPP access
      operationId: Update3GppRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      - name: supported-features
        in: query
        description: Features required to be supported by the target NF
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Amf3GppAccessRegistrationModification'
        required: true
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchResult'
        "204":
          description: Expected response to a valid request
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: Unprocessable Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:amf-registration:write
  /{ueId}/registrations/amf-3gpp-access/dereg-amf:
    post:
      tags:
      - Trigger AMF for 3GPP access deregistration
      summary: trigger AMF for 3GPP access deregistration
      operationId: deregAMF
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmfDeregInfo'
        required: true
      responses:
        "204":
          description: No content
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:amf-registration:write
  /{ueId}/registrations/amf-3gpp-access/pei-update:
    post:
      tags:
      - PEI Update
      summary: Updates the PEI in the 3GPP access registration context
      operationId: PeiUpdate
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeiUpdateInfo'
        required: true
      responses:
        "204":
          description: No content
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:amf-registration:write
  /{ueId}/registrations/amf-3gpp-access/roaming-info-update:
    post:
      tags:
      - Roaming Information Update
      summary: Update the Roaming Information
      operationId: UpdateRoamingInformation
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoamingInfoUpdate'
        required: true
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: "Contains the URI of the newly created resource, according\
                \ to the structure: {apiRoot}/nudm-uecm/<apiVersion>/{ueId}/registrations/amf-3gpp-access/roaming-info-update"
              required: true
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoamingInfoUpdate'
        "204":
          description: No content
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:roaming-info-update:write
  /{ueId}/registrations/amf-non-3gpp-access:
    get:
      tags:
      - AMF non-3GPP-access Registration Info  Retrieval
      summary: retrieve the AMF registration for non-3GPP access information
      operationId: GetNon3GppRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/VarUeId'
      - name: supported-features
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmfNon3GppAccessRegistration'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: 406 Not Acceptable
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
    put:
      tags:
      - AMF registration for non-3GPP access
      summary: register as AMF for non-3GPP access
      operationId: Non3GppRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmfNon3GppAccessRegistration'
        required: true
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: "Contains the URI of the newly created resource, according\
                \ to the structure: {apiRoot}/nudm-uecm/v1/{ueId}/registrations/amf-non-3gpp-access"
              required: true
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmfNon3GppAccessRegistration'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmfNon3GppAccessRegistration'
        "204":
          description: No Content
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      callbacks:
        deregistrationNotification:
          '{request.body#/deregCallbackUri}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DeregistrationData'
                required: true
              responses:
                "204":
                  description: Successful Notification response
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "400":
                  description: Bad request
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "401":
                  description: Unauthorized
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "403":
                  description: Forbidden
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "404":
                  description: Not Found
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "411":
                  description: Length Required
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "413":
                  description: Content Too Large
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "415":
                  description: Unsupported Media Type
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "429":
                  description: Too Many Requests
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "500":
                  description: Internal Server Error
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "502":
                  description: Bad Gateway
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "503":
                  description: Service Unavailable
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                default:
                  description: Unexpected error
        pcscfRestorationNotification:
          '{request.body#/pcscfRestorationCallbackUri}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/PcscfRestorationNotification'
                required: true
              responses:
                "204":
                  description: Successful Notification response
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "400":
                  description: Bad request
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "401":
                  description: Unauthorized
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "403":
                  description: Forbidden
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "404":
                  description: Not Found
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "411":
                  description: Length Required
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "413":
                  description: Content Too Large
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "415":
                  description: Unsupported Media Type
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "429":
                  description: Too Many Requests
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "500":
                  description: Internal Server Error
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "502":
                  description: Bad Gateway
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "503":
                  description: Service Unavailable
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                default:
                  description: Unexpected error
        dataRestorationNotification:
          '{request.body#/dataRestorationCallbackUri}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DataRestorationNotification'
                required: true
              responses:
                "204":
                  description: Successful Notification response
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "400":
                  description: Bad request
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "401":
                  description: Unauthorized
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "403":
                  description: Forbidden
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "404":
                  description: Not Found
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "409":
                  description: Conflict
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "411":
                  description: Length Required
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "413":
                  description: Content Too Large
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "415":
                  description: Unsupported Media Type
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "429":
                  description: Too Many Requests
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "500":
                  description: Internal Server Error
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "502":
                  description: Bad Gateway
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "503":
                  description: Service Unavailable
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                default:
                  description: Unexpected error
        reauthNotification:
          '{request.body#/reauthNotifyCallbackUri}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ReauthNotificationInfo'
                required: true
              responses:
                "204":
                  description: Successful Notification response
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "400":
                  description: Bad request
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "401":
                  description: Unauthorized
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "403":
                  description: Forbidden
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "404":
                  description: Not Found
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "411":
                  description: Length Required
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "413":
                  description: Content Too Large
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "415":
                  description: Unsupported Media Type
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "429":
                  description: Too Many Requests
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "500":
                  description: Internal Server Error
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "502":
                  description: Bad Gateway
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "503":
                  description: Service Unavailable
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                default:
                  description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:amf-registration:write
    patch:
      tags:
      - Parameter update in the AMF registration for non-3GPP access
      summary: update a parameter in the AMF registration for non-3GPP access
      operationId: UpdateNon3GppRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      - name: supported-features
        in: query
        description: Features required to be supported by the target NF
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AmfNon3GppAccessRegistrationModification'
        required: true
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchResult'
        "204":
          description: Expected response to a valid request
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: Unprocessable Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:amf-registration:write
  /{ueId}/registrations/smf-registrations:
    get:
      tags:
      - SMF SmfRegistration
      summary: retrieve the SMF registration information
      operationId: GetSmfRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/VarUeId'
      - name: single-nssai
        in: query
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snssai'
      - name: dnn
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Dnn'
      - name: supported-features
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmfRegistrationInfo'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: 406 Not Acceptable
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
  /{ueId}/registrations/smf-registrations/{pduSessionId}:
    get:
      tags:
      - Retrieve SMF Registration
      summary: get an SMF registration
      operationId: RetrieveSmfRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      - name: pduSessionId
        in: path
        description: Identifier of the PDU session
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/PduSessionId'
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmfRegistration'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: 406 Not Acceptable
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
    put:
      tags:
      - SMF SmfRegistration
      summary: register as SMF
      operationId: Registration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      - name: pduSessionId
        in: path
        description: Identifier of the PDU session
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/PduSessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmfRegistration'
        required: true
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: "Contains the URI of the newly created resource, according\
                \ to the structure: {apiRoot}/nudm-uecm/v1/{ueId}/registrations/smf-registrations/{pduSessionId}"
              required: true
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmfRegistration'
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmfRegistration'
        "204":
          description: No content
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      callbacks:
        deregistrationNotification:
          '{request.body#/deregCallbackUri}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DeregistrationData'
                required: true
              responses:
                "204":
                  description: Successful Notification response
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "400":
                  description: Bad request
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "401":
                  description: Unauthorized
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "403":
                  description: Forbidden
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "404":
                  description: Not Found
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "411":
                  description: Length Required
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "413":
                  description: Content Too Large
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "415":
                  description: Unsupported Media Type
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "429":
                  description: Too Many Requests
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "500":
                  description: Internal Server Error
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "502":
                  description: Bad Gateway
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "503":
                  description: Service Unavailable
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                default:
                  description: Unexpected error
        pcscfRestorationNotification:
          '{request.body#/pcscfRestorationCallbackUri}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/PcscfRestorationNotification'
                required: true
              responses:
                "204":
                  description: Successful Notification response
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "400":
                  description: Bad request
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "401":
                  description: Unauthorized
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "403":
                  description: Forbidden
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "404":
                  description: Not Found
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "411":
                  description: Length Required
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "413":
                  description: Content Too Large
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "415":
                  description: Unsupported Media Type
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "429":
                  description: Too Many Requests
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "500":
                  description: Internal Server Error
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "502":
                  description: Bad Gateway
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "503":
                  description: Service Unavailable
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                default:
                  description: Unexpected error
        dataRestorationNotification:
          '{request.body#/dataRestorationCallbackUri}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DataRestorationNotification'
                required: true
              responses:
                "204":
                  description: Successful Notification response
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "400":
                  description: Bad request
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "401":
                  description: Unauthorized
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "403":
                  description: Forbidden
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "404":
                  description: Not Found
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "409":
                  description: Conflict
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "411":
                  description: Length Required
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "413":
                  description: Content Too Large
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "415":
                  description: Unsupported Media Type
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "429":
                  description: Too Many Requests
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "500":
                  description: Internal Server Error
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "502":
                  description: Bad Gateway
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "503":
                  description: Service Unavailable
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                default:
                  description: Unexpected error
        staleCheckNotification:
          '{request.body#/staleCheckCallbackUri}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/PduSessionIds'
                required: true
              responses:
                "200":
                  description: Partial Success
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/PduSessionIds'
                "204":
                  description: Successful Notification response
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "400":
                  description: Bad request
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "401":
                  description: Unauthorized
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "403":
                  description: Forbidden
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "404":
                  description: Not Found
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "411":
                  description: Length Required
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "413":
                  description: Content Too Large
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "415":
                  description: Unsupported Media Type
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "429":
                  description: Too Many Requests
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "500":
                  description: Internal Server Error
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "502":
                  description: Bad Gateway
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "503":
                  description: Service Unavailable
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                default:
                  description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:smf-registration:write
    delete:
      tags:
      - SMF Deregistration
      summary: delete an SMF registration
      operationId: SmfDeregistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      - name: pduSessionId
        in: path
        description: Identifier of the PDU session
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/PduSessionId'
      - name: smf-set-id
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NfSetId'
      - name: smf-instance-id
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NfInstanceId'
      - name: smf-events-implicitly-unsubscribed
        in: query
        description: Indication on SMF event subscriptions implicitly unsubscribed.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          enum:
          - true
      responses:
        "204":
          description: Expected response to a valid request
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: Unprocessable Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:smf-registration:write
    patch:
      tags:
      - Parameter update in the SMF registration
      summary: update a parameter in the SMF registration
      operationId: UpdateSmfRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      - name: pduSessionId
        in: path
        description: Identifier of the PDU session
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/PduSessionId'
      - name: supported-features
        in: query
        description: Features required to be supported by the target NF
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/SmfRegistrationModification'
        required: true
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchResult'
        "204":
          description: Expected response to a valid request
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: Unprocessable Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:smf-registration:write
  /{ueId}/registrations/smsf-3gpp-access:
    get:
      tags:
      - SMSF 3GPP access Registration Info Retrieval
      summary: retrieve the SMSF registration for 3GPP access information
      operationId: Get3GppSmsfRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Gpsi'
      - name: supported-features
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsfRegistration'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: 406 Not Acceptable
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
    put:
      tags:
      - SMSF registration for 3GPP access
      summary: register as SMSF for 3GPP access
      operationId: 3GppSmsfRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsfRegistration'
        required: true
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: "Contains the URI of the newly created resource, according\
                \ to the structure: {apiRoot}/nudm-uecm/v1/{ueId}/registrations/smsf-3gpp-access"
              required: true
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: "Entity Tag, containing a strong validator, as described\
                \ in IETF RFC 9110, 2.3"
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsfRegistration'
        "200":
          description: Expected response to a valid request
          headers:
            ETag:
              description: "Entity Tag, containing a strong validator, as described\
                \ in IETF RFC 9110, 2.3"
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsfRegistration'
        "204":
          description: No content
          headers:
            ETag:
              description: "Entity Tag, containing a strong validator, as described\
                \ in IETF RFC 9110, 2.3"
              style: simple
              explode: false
              schema:
                type: string
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      callbacks:
        dataRestorationNotification:
          '{request.body#/dataRestorationCallbackUri}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DataRestorationNotification'
                required: true
              responses:
                "204":
                  description: Successful Notification response
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "400":
                  description: Bad request
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "401":
                  description: Unauthorized
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "403":
                  description: Forbidden
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "404":
                  description: Not Found
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "409":
                  description: Conflict
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "411":
                  description: Length Required
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "413":
                  description: Content Too Large
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "415":
                  description: Unsupported Media Type
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "429":
                  description: Too Many Requests
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "500":
                  description: Internal Server Error
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "502":
                  description: Bad Gateway
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "503":
                  description: Service Unavailable
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                default:
                  description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:smsf-registration:write
    delete:
      tags:
      - SMSF Deregistration for 3GPP Access
      summary: delete the SMSF registration for 3GPP access
      operationId: 3GppSmsfDeregistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      - name: smsf-set-id
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NfSetId'
      - name: If-Match
        in: header
        description: "Validator for conditional requests, as described in IETF RFC\
          \ 9110, 3.1"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Expected response to a valid request
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: Unprocessable Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:smsf-registration:write
    patch:
      tags:
      - Parameter update in the SMSF registration for 3GPP access
      summary: update a parameter in the SMSF registration for 3GPP access
      operationId: UpdateSmsf3GppRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      - name: supported-features
        in: query
        description: Features required to be supported by the target NF
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/SmsfRegistrationModification'
        required: true
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchResult'
        "204":
          description: Expected response to a valid request
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: Unprocessable Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:smsf-registration:write
  /{ueId}/registrations/smsf-non-3gpp-access:
    get:
      tags:
      - SMSF non-3GPP access Registration Info Retrieval
      summary: retrieve the SMSF registration for non-3GPP access information
      operationId: GetNon3GppSmsfRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Gpsi'
      - name: supported-features
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsfRegistration'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: 406 Not Acceptable
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
    put:
      tags:
      - SMSF registration for non-3GPP access
      summary: register as SMSF for non-3GPP access
      operationId: Non3GppSmsfRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsfRegistration'
        required: true
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: "Contains the URI of the newly created resource, according\
                \ to the structure: {apiRoot}/nudm-uecm/v1/{ueId}/registrations/smsf-non-3gpp-access"
              required: true
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: "Entity Tag, containing a strong validator, as described\
                \ in IETF RFC 9110, 2.3"
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsfRegistration'
        "200":
          description: Expected response to a valid request
          headers:
            ETag:
              description: "Entity Tag, containing a strong validator, as described\
                \ in IETF RFC 9110, 2.3"
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsfRegistration'
        "204":
          description: No content
          headers:
            ETag:
              description: "Entity Tag, containing a strong validator, as described\
                \ in IETF RFC 9110, 2.3"
              style: simple
              explode: false
              schema:
                type: string
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      callbacks:
        dataRestorationNotification:
          '{request.body#/dataRestorationCallbackUri}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DataRestorationNotification'
                required: true
              responses:
                "204":
                  description: Successful Notification response
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                "400":
                  description: Bad request
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "401":
                  description: Unauthorized
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "403":
                  description: Forbidden
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "404":
                  description: Not Found
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "409":
                  description: Conflict
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "411":
                  description: Length Required
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "413":
                  description: Content Too Large
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "415":
                  description: Unsupported Media Type
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "429":
                  description: Too Many Requests
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "500":
                  description: Internal Server Error
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "502":
                  description: Bad Gateway
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                "503":
                  description: Service Unavailable
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                default:
                  description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:smsf-registration:write
    delete:
      tags:
      - SMSF Deregistration for non-3GPP access
      summary: delete SMSF registration for non 3GPP access
      operationId: Non3GppSmsfDeregistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      - name: smsf-set-id
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NfSetId'
      - name: If-Match
        in: header
        description: "Validator for conditional requests, as described in IETF RFC\
          \ 9110, 3.1"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Expected response to a valid request
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: Unprocessable Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:smsf-registration:write
    patch:
      tags:
      - Parameter update in the SMSF registration for non-3GPP access
      summary: update a parameter in the SMSF registration for non-3GPP access
      operationId: UpdateSmsfNon3GppRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      - name: supported-features
        in: query
        description: Features required to be supported by the target NF
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/SmsfRegistrationModification'
        required: true
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchResult'
        "204":
          description: Expected response to a valid request
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: Unprocessable Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:smsf-registration:write
  /{ueId}/registrations/ip-sm-gw:
    get:
      tags:
      - IP-SM-GW Registration Info Retrieval
      summary: Retrieve the IP-SM-GW registration information
      operationId: GetIpSmGwRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpSmGwRegistration'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: 406 Not Acceptable
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
    put:
      tags:
      - IP-SM-GW registration
      summary: Register an IP-SM-GW
      operationId: IpSmGwRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpSmGwRegistration'
        required: true
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: "Contains the URI of the newly created resource, according\
                \ to the structure: {apiRoot}/nudm-uecm/v1/{ueId}/registrations/ip-sm-gw"
              required: true
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpSmGwRegistration'
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpSmGwRegistration'
        "204":
          description: No content
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:ip-sm-gw-registration:write
    delete:
      tags:
      - IP-SM-GW Deregistration
      summary: Delete the IP-SM-GW registration
      operationId: IpSmGwDeregistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Supi'
      responses:
        "204":
          description: Expected response to a valid request
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:ip-sm-gw-registration:write
  /restore-pcscf:
    post:
      tags:
      - Trigger P-CSCF Restoration
      summary: Trigger the Restoration of the P-CSCF
      operationId: Trigger P-CSCF Restoration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerRequest'
        required: true
      responses:
        "204":
          description: Successful response
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "501":
          description: Not Implemented
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
  /{ueId}/registrations/location:
    get:
      tags:
      - UE Location Information retrieval
      summary: retrieve the target UE's location information
      operationId: GetLocationInfo
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/VarUeId'
      - name: supported-features
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationInfo'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: 406 Not Acceptable
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
  /{ueId}/registrations/nwdaf-registrations:
    get:
      tags:
      - NWDAF Registration Info Retrieval
      summary: retrieve the NWDAF registration
      operationId: GetNwdafRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/VarUeId'
      - name: analytics-ids
        in: query
        description: List of analytics Id(s) provided by the consumers of NWDAF.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/EventId'
      - name: supported-features
        in: query
        description: Supported Features
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                minItems: 1
                type: array
                items:
                  $ref: '#/components/schemas/NwdafRegistration'
                x-content-type: application/json
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: 406 Not Acceptable
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
  /{ueId}/registrations/nwdaf-registrations/{nwdafRegistrationId}:
    put:
      tags:
      - NWDAF registration
      summary: register as NWDAF
      operationId: NwdafRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/VarUeId'
      - name: nwdafRegistrationId
        in: path
        description: NWDAF registration identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NwdafRegistration'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NwdafRegistration'
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NwdafRegistration'
        "204":
          description: No content
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:nwdaf-registration:write
    delete:
      tags:
      - NWDAF Deregistration
      summary: delete an NWDAF registration
      operationId: NwdafDeregistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/VarUeId'
      - name: nwdafRegistrationId
        in: path
        description: NWDAF registration identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Expected response to a valid request
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:nwdaf-registration:write
    patch:
      tags:
      - Parameter update in the NWDAF registration
      summary: Update a parameter in the NWDAF registration
      operationId: UpdateNwdafRegistration
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/VarUeId'
      - name: nwdafRegistrationId
        in: path
        description: NWDAF registration identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: supported-features
        in: query
        description: Supported Features
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/NwdafRegistrationModification'
        required: true
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "204":
          description: Expected response to a valid request
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: Unprocessable Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-uecm
      - oAuth2ClientCredentials:
        - nudm-uecm
        - nudm-uecm:nwdaf-registration:write
  /{ueId}/registrations/auth-trigger:
    post:
      tags:
      - Trigger the primary (re-)authentication
      summary: trigger the primary (re-)authentication
      operationId: authTrigger
      parameters:
      - name: ueId
        in: path
        description: Identifier of the UE
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTriggerInfo'
        required: true
      responses:
        "204":
          description: No content
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "411":
          description: Length Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "413":
          description: Content Too Large
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
components:
  schemas:
    Amf3GppAccessRegistration:
      required:
      - amfInstanceId
      - deregCallbackUri
      - guami
      - ratType
      type: object
      properties:
        amfInstanceId:
          $ref: '#/components/schemas/NfInstanceId'
        supportedFeatures:
          $ref: '#/components/schemas/SupportedFeatures'
        purgeFlag:
          $ref: '#/components/schemas/PurgeFlag'
        pei:
          $ref: '#/components/schemas/Pei'
        imsVoPs:
          $ref: '#/components/schemas/ImsVoPs'
        deregCallbackUri:
          $ref: '#/components/schemas/Uri'
        amfServiceNameDereg:
          $ref: '#/components/schemas/ServiceName'
        pcscfRestorationCallbackUri:
          $ref: '#/components/schemas/Uri'
        amfServiceNamePcscfRest:
          $ref: '#/components/schemas/ServiceName'
        initialRegistrationInd:
          type: boolean
        emergencyRegistrationInd:
          type: boolean
        guami:
          $ref: '#/components/schemas/Guami'
        backupAmfInfo:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BackupAmfInfo'
        drFlag:
          $ref: '#/components/schemas/DualRegistrationFlag'
        ratType:
          $ref: '#/components/schemas/RatType'
        urrpIndicator:
          type: boolean
        amfEeSubscriptionId:
          $ref: '#/components/schemas/Uri'
        epsInterworkingInfo:
          $ref: '#/components/schemas/EpsInterworkingInfo'
        ueSrvccCapability:
          type: boolean
        registrationTime:
          $ref: '#/components/schemas/DateTime'
        vgmlcAddress:
          $ref: '#/components/schemas/VgmlcAddress'
        contextInfo:
          $ref: '#/components/schemas/ContextInfo'
        noEeSubscriptionInd:
          type: boolean
        supi:
          $ref: '#/components/schemas/Supi'
        ueReachableInd:
          $ref: '#/components/schemas/UeReachableInd'
        reRegistrationRequired:
          type: boolean
        adminDeregSubWithdrawn:
          type: boolean
        dataRestorationCallbackUri:
          $ref: '#/components/schemas/Uri'
        resetIds:
          minItems: 1
          type: array
          items:
            type: string
        disasterRoamingInd:
          type: boolean
          default: false
        ueMINTCapability:
          type: boolean
        sorSnpnSiSupported:
          type: boolean
          default: false
        udrRestartInd:
          type: boolean
          default: false
        lastSynchronizationTime:
          $ref: '#/components/schemas/DateTime'
      description: |
        This datatype contains the set of information relevant to the AMF where the UE has registered via 3GPP access.
      example:
        registrationTime: null
        supportedFeatures: supportedFeatures
        urrpIndicator: true
        noEeSubscriptionInd: true
        lastSynchronizationTime: null
        vgmlcAddress:
          vgmlcAddressIpv6: 2001:db8:85a3::8a2e:370:7334
          vgmlcFqdn: null
          vgmlcAddressIpv4: 198.51.100.1
        ueReachableInd: ""
        adminDeregSubWithdrawn: true
        udrRestartInd: false
        pei: pei
        amfEeSubscriptionId: null
        drFlag: true
        amfInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        initialRegistrationInd: true
        epsInterworkingInfo:
          registrationTime: 2000-01-23T04:56:07.000+00:00
          epsIwkPgws:
            key:
              smfInstanceId: null
              plmnId:
                mnc: null
                mcc: null
              pgwFqdn: null
        imsVoPs: ""
        deregCallbackUri: deregCallbackUri
        purgeFlag: true
        ueSrvccCapability: true
        contextInfo:
          requestHeaders:
          - requestHeaders
          - requestHeaders
          origHeaders:
          - origHeaders
          - origHeaders
        dataRestorationCallbackUri: null
        ratType: ""
        emergencyRegistrationInd: true
        amfServiceNameDereg: ""
        amfServiceNamePcscfRest: null
        sorSnpnSiSupported: false
        guami:
          plmnId:
            mnc: mnc
            nid: nid
            mcc: mcc
          amfId: amfId
        supi: supi
        reRegistrationRequired: true
        disasterRoamingInd: false
        resetIds:
        - resetIds
        - resetIds
        pcscfRestorationCallbackUri: null
        backupAmfInfo:
        - backupAmf: backupAmf
          guamiList:
          - null
          - null
        - backupAmf: backupAmf
          guamiList:
          - null
          - null
        ueMINTCapability: true
    Amf3GppAccessRegistrationModification:
      required:
      - guami
      type: object
      properties:
        guami:
          $ref: '#/components/schemas/Guami'
        purgeFlag:
          $ref: '#/components/schemas/PurgeFlag'
        pei:
          $ref: '#/components/schemas/Pei'
        imsVoPs:
          $ref: '#/components/schemas/ImsVoPs'
        backupAmfInfo:
          type: array
          items:
            $ref: '#/components/schemas/BackupAmfInfo'
        epsInterworkingInfo:
          $ref: '#/components/schemas/EpsInterworkingInfo'
        ueSrvccCapability:
          type: boolean
          nullable: true
        ueMINTCapability:
          type: boolean
      description: |
        This datatype contains the set of attributes obtained from type  Amf3GppAccessRegistration by deleting attributes that are not subject to modification by HTTP PATCH method.
    EpsInterworkingInfo:
      type: object
      properties:
        epsIwkPgws:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EpsIwkPgw'
          description: A map (list of key-value pairs where Dnn serves as key) of
            EpsIwkPgws
        registrationTime:
          $ref: '#/components/schemas/DateTime'
      description: |
        This information element contains the associations between APN/DNN and PGW-C+SMF selected by the AMF for EPS interworking.
      example:
        registrationTime: 2000-01-23T04:56:07.000+00:00
        epsIwkPgws:
          key:
            smfInstanceId: null
            plmnId:
              mnc: null
              mcc: null
            pgwFqdn: null
    EpsIwkPgw:
      required:
      - pgwFqdn
      - smfInstanceId
      type: object
      properties:
        pgwFqdn:
          $ref: '#/components/schemas/Fqdn'
        smfInstanceId:
          $ref: '#/components/schemas/NfInstanceId'
        plmnId:
          $ref: '#/components/schemas/PlmnId'
      description: "This datatype signifies the PGW FQDN, SMF instance ID and the\
        \ PLMNId location."
      example:
        smfInstanceId: null
        plmnId:
          mnc: null
          mcc: null
        pgwFqdn: null
    AmfNon3GppAccessRegistration:
      required:
      - amfInstanceId
      - deregCallbackUri
      - guami
      - imsVoPs
      - ratType
      type: object
      properties:
        amfInstanceId:
          $ref: '#/components/schemas/NfInstanceId'
        supportedFeatures:
          $ref: '#/components/schemas/SupportedFeatures'
        purgeFlag:
          $ref: '#/components/schemas/PurgeFlag'
        pei:
          $ref: '#/components/schemas/Pei'
        imsVoPs:
          $ref: '#/components/schemas/ImsVoPs'
        deregCallbackUri:
          $ref: '#/components/schemas/Uri'
        amfServiceNameDereg:
          $ref: '#/components/schemas/ServiceName'
        pcscfRestorationCallbackUri:
          $ref: '#/components/schemas/Uri'
        amfServiceNamePcscfRest:
          $ref: '#/components/schemas/ServiceName'
        guami:
          $ref: '#/components/schemas/Guami'
        backupAmfInfo:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BackupAmfInfo'
        ratType:
          $ref: '#/components/schemas/RatType'
        urrpIndicator:
          type: boolean
        amfEeSubscriptionId:
          $ref: '#/components/schemas/Uri'
        registrationTime:
          $ref: '#/components/schemas/DateTime'
        vgmlcAddress:
          $ref: '#/components/schemas/VgmlcAddress'
        contextInfo:
          $ref: '#/components/schemas/ContextInfo'
        noEeSubscriptionInd:
          type: boolean
        supi:
          $ref: '#/components/schemas/Supi'
        reRegistrationRequired:
          type: boolean
        adminDeregSubWithdrawn:
          type: boolean
        dataRestorationCallbackUri:
          $ref: '#/components/schemas/Uri'
        resetIds:
          minItems: 1
          type: array
          items:
            type: string
        disasterRoamingInd:
          type: boolean
          default: false
        sorSnpnSiSupported:
          type: boolean
          default: false
        udrRestartInd:
          type: boolean
          default: false
        lastSynchronizationTime:
          $ref: '#/components/schemas/DateTime'
      description: |
        Represents the complete set of information relevant to the AMF when the UE has registered via non 3GPP access.
      example:
        registrationTime: null
        supportedFeatures: null
        urrpIndicator: true
        noEeSubscriptionInd: true
        lastSynchronizationTime: null
        vgmlcAddress: null
        adminDeregSubWithdrawn: true
        udrRestartInd: false
        pei: null
        amfEeSubscriptionId: null
        amfInstanceId: null
        imsVoPs: null
        deregCallbackUri: null
        purgeFlag: null
        contextInfo: null
        dataRestorationCallbackUri: null
        ratType: null
        amfServiceNameDereg: null
        amfServiceNamePcscfRest: null
        sorSnpnSiSupported: false
        guami: null
        supi: null
        reRegistrationRequired: true
        disasterRoamingInd: false
        resetIds:
        - resetIds
        - resetIds
        pcscfRestorationCallbackUri: null
        backupAmfInfo:
        - null
        - null
    AmfNon3GppAccessRegistrationModification:
      required:
      - guami
      type: object
      properties:
        guami:
          $ref: '#/components/schemas/Guami'
        purgeFlag:
          $ref: '#/components/schemas/PurgeFlag'
        pei:
          $ref: '#/components/schemas/Pei'
        imsVoPs:
          $ref: '#/components/schemas/ImsVoPs'
        backupAmfInfo:
          type: array
          items:
            $ref: '#/components/schemas/BackupAmfInfo'
      description: |
        This data type contains attributes of AmfNon3GppAccessRegistration that can be modified using PATCH.
    SmfRegistration:
      required:
      - pduSessionId
      - plmnId
      - singleNssai
      - smfInstanceId
      type: object
      properties:
        smfInstanceId:
          $ref: '#/components/schemas/NfInstanceId'
        smfSetId:
          $ref: '#/components/schemas/NfSetId'
        supportedFeatures:
          $ref: '#/components/schemas/SupportedFeatures'
        pduSessionId:
          $ref: '#/components/schemas/PduSessionId'
        singleNssai:
          $ref: '#/components/schemas/Snssai'
        dnn:
          $ref: '#/components/schemas/Dnn'
        emergencyServices:
          type: boolean
        pcscfRestorationCallbackUri:
          $ref: '#/components/schemas/Uri'
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        pgwFqdn:
          $ref: '#/components/schemas/Fqdn'
        pgwIpAddr:
          $ref: '#/components/schemas/IpAddress'
        epdgInd:
          type: boolean
          default: false
        deregCallbackUri:
          $ref: '#/components/schemas/Uri'
        registrationReason:
          $ref: '#/components/schemas/RegistrationReason'
        registrationTime:
          $ref: '#/components/schemas/DateTime'
        contextInfo:
          $ref: '#/components/schemas/ContextInfo'
        pcfId:
          $ref: '#/components/schemas/NfInstanceId'
        dataRestorationCallbackUri:
          $ref: '#/components/schemas/Uri'
        resetIds:
          minItems: 1
          type: array
          items:
            type: string
        udrRestartInd:
          type: boolean
          default: false
        lastSynchronizationTime:
          $ref: '#/components/schemas/DateTime'
        pduSessionReActivationRequired:
          type: boolean
          default: false
        staleCheckCallbackUri:
          $ref: '#/components/schemas/Uri'
        udmStaleCheckCallbackUri:
          $ref: '#/components/schemas/Uri'
        wildcardInd:
          type: boolean
      description: |
        This datatype contains a complete set of mandatory information relevant to an SMF  serving the UE.
      example:
        registrationTime: null
        supportedFeatures: null
        smfInstanceId: null
        smfSetId: smfSetId
        lastSynchronizationTime: null
        pgwIpAddr:
          ipv6Addr: null
          ipv4Addr: null
          ipv6Prefix: 2001:db8:abcd:12::0/64
        udrRestartInd: false
        singleNssai:
          sd: sd
          sst: 153
        pcfId: null
        emergencyServices: true
        pduSessionId: 20
        plmnId: null
        registrationReason: ""
        deregCallbackUri: null
        wildcardInd: true
        contextInfo: null
        dnn: dnn
        dataRestorationCallbackUri: null
        pduSessionReActivationRequired: false
        udmStaleCheckCallbackUri: null
        epdgInd: false
        resetIds:
        - resetIds
        - resetIds
        staleCheckCallbackUri: null
        pcscfRestorationCallbackUri: null
        pgwFqdn: null
    PduSessionIds:
      type: object
      properties:
        pduSessionIdList:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/PduSessionId'
    SmsfRegistration:
      required:
      - plmnId
      - smsfInstanceId
      type: object
      properties:
        smsfInstanceId:
          $ref: '#/components/schemas/NfInstanceId'
        smsfSetId:
          $ref: '#/components/schemas/NfSetId'
        supportedFeatures:
          $ref: '#/components/schemas/SupportedFeatures'
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        smsfMAPAddress:
          $ref: '#/components/schemas/E164Number'
        smsfDiameterAddress:
          $ref: '#/components/schemas/NetworkNodeDiameterAddress'
        registrationTime:
          $ref: '#/components/schemas/DateTime'
        contextInfo:
          $ref: '#/components/schemas/ContextInfo'
        dataRestorationCallbackUri:
          $ref: '#/components/schemas/Uri'
        resetIds:
          minItems: 1
          type: array
          items:
            type: string
        smsfSbiSupInd:
          type: boolean
          default: false
        udrRestartInd:
          type: boolean
          default: false
        lastSynchronizationTime:
          $ref: '#/components/schemas/DateTime'
        ueMemoryAvailableInd:
          type: boolean
          enum:
          - true
      description: |
        This datatype contains SMSF registration for 3GPP access that is created or updated with the received information.
      example:
        registrationTime: null
        ueMemoryAvailableInd: true
        supportedFeatures: null
        contextInfo: null
        dataRestorationCallbackUri: null
        smsfSbiSupInd: false
        smsfSetId: null
        smsfDiameterAddress:
          name: null
          realm: null
        lastSynchronizationTime: null
        smsfInstanceId: null
        udrRestartInd: false
        resetIds:
        - resetIds
        - resetIds
        smsfMAPAddress: smsfMAPAddress
        plmnId: null
    DeregistrationData:
      required:
      - deregReason
      type: object
      properties:
        deregReason:
          $ref: '#/components/schemas/DeregistrationReason'
        accessType:
          $ref: '#/components/schemas/AccessType'
        pduSessionId:
          $ref: '#/components/schemas/PduSessionId'
        newSmfInstanceId:
          $ref: '#/components/schemas/NfInstanceId'
      description: |
        This datatype is supported by the POST HTTP method, and it includes the deregistration data.
    PcscfRestorationNotification:
      required:
      - supi
      type: object
      properties:
        supi:
          $ref: '#/components/schemas/Supi'
        failedPcscf:
          $ref: '#/components/schemas/PcscfAddress'
      description: |
        This datatype contains the SUPI optionally addresses the failed P-CSCF. It is supported by the POST HTTP method.
    NetworkNodeDiameterAddress:
      required:
      - name
      - realm
      type: object
      properties:
        name:
          $ref: '#/components/schemas/DiameterIdentity'
        realm:
          $ref: '#/components/schemas/DiameterIdentity'
      description: |
        This data type is a part of smsfDiameterAddress and it should be present whenever smsf supports Diameter protocol.
      example:
        name: null
        realm: null
    TriggerRequest:
      required:
      - supi
      type: object
      properties:
        supi:
          $ref: '#/components/schemas/Supi'
        failedPcscf:
          $ref: '#/components/schemas/PcscfAddress'
      description: |
        This data type identifies if the NF service consumer requires to trigger P-CSCF  restoration.
    SmfRegistrationInfo:
      required:
      - smfRegistrationList
      type: object
      properties:
        smfRegistrationList:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SmfRegistration'
      description: This data type provides information about the SMF registration
        information.
      example:
        smfRegistrationList:
        - registrationTime: null
          supportedFeatures: null
          smfInstanceId: null
          smfSetId: smfSetId
          lastSynchronizationTime: null
          pgwIpAddr:
            ipv6Addr: null
            ipv4Addr: null
            ipv6Prefix: 2001:db8:abcd:12::0/64
          udrRestartInd: false
          singleNssai:
            sd: sd
            sst: 153
          pcfId: null
          emergencyServices: true
          pduSessionId: 20
          plmnId: null
          registrationReason: ""
          deregCallbackUri: null
          wildcardInd: true
          contextInfo: null
          dnn: dnn
          dataRestorationCallbackUri: null
          pduSessionReActivationRequired: false
          udmStaleCheckCallbackUri: null
          epdgInd: false
          resetIds:
          - resetIds
          - resetIds
          staleCheckCallbackUri: null
          pcscfRestorationCallbackUri: null
          pgwFqdn: null
        - registrationTime: null
          supportedFeatures: null
          smfInstanceId: null
          smfSetId: smfSetId
          lastSynchronizationTime: null
          pgwIpAddr:
            ipv6Addr: null
            ipv4Addr: null
            ipv6Prefix: 2001:db8:abcd:12::0/64
          udrRestartInd: false
          singleNssai:
            sd: sd
            sst: 153
          pcfId: null
          emergencyServices: true
          pduSessionId: 20
          plmnId: null
          registrationReason: ""
          deregCallbackUri: null
          wildcardInd: true
          contextInfo: null
          dnn: dnn
          dataRestorationCallbackUri: null
          pduSessionReActivationRequired: false
          udmStaleCheckCallbackUri: null
          epdgInd: false
          resetIds:
          - resetIds
          - resetIds
          staleCheckCallbackUri: null
          pcscfRestorationCallbackUri: null
          pgwFqdn: null
    IpSmGwRegistration:
      type: object
      properties:
        ipSmGwMapAddress:
          $ref: '#/components/schemas/E164Number'
        ipSmGwDiameterAddress:
          $ref: '#/components/schemas/NetworkNodeDiameterAddress'
        ipsmgwIpv4:
          $ref: '#/components/schemas/Ipv4Addr'
        ipsmgwIpv6:
          $ref: '#/components/schemas/Ipv6Addr'
        ipsmgwFqdn:
          $ref: '#/components/schemas/Fqdn'
        nfInstanceId:
          $ref: '#/components/schemas/NfInstanceId'
        unriIndicator:
          type: boolean
          default: false
        resetIds:
          minItems: 1
          type: array
          items:
            type: string
        ipSmGwSbiSupInd:
          type: boolean
          default: false
      description: This data type contains the IP-SW-GW routing information.
      example:
        unriIndicator: false
        nfInstanceId: null
        resetIds:
        - resetIds
        - resetIds
        ipSmGwSbiSupInd: false
        ipSmGwDiameterAddress: null
        ipsmgwIpv4: null
        ipSmGwMapAddress: null
        ipsmgwIpv6: null
        ipsmgwFqdn: null
      anyOf:
      - required:
        - ipSmGwMapAddress
      - required:
        - ipSmGwDiameterAddress
      - required:
        - ipsmgwIpv4
      - required:
        - ipsmgwIpv6
      - required:
        - ipsmgwFqdn
    AmfDeregInfo:
      required:
      - deregReason
      type: object
      properties:
        deregReason:
          $ref: '#/components/schemas/DeregistrationReason'
      description: This data type contains the reason of deregistration.
    LocationInfo:
      required:
      - registrationLocationInfoList
      type: object
      properties:
        supi:
          $ref: '#/components/schemas/Supi'
        gpsi:
          $ref: '#/components/schemas/Gpsi'
        registrationLocationInfoList:
          maxItems: 2
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/RegistrationLocationInfo'
        supportedFeatures:
          $ref: '#/components/schemas/SupportedFeatures'
      description: This data type contains the UE's location information in 5GC.
      example:
        supportedFeatures: supportedFeatures
        registrationLocationInfoList:
        - amfInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          accessTypeList:
          - 3GPP_ACCESS
          - 3GPP_ACCESS
          plmnId:
            mnc: null
            mcc: null
          guami:
            plmnId:
              mnc: mnc
              nid: nid
              mcc: mcc
            amfId: amfId
          vgmlcAddress:
            vgmlcAddressIpv6: 2001:db8:85a3::8a2e:370:7334
            vgmlcFqdn: null
            vgmlcAddressIpv4: 198.51.100.1
        - amfInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          accessTypeList:
          - 3GPP_ACCESS
          - 3GPP_ACCESS
          plmnId:
            mnc: null
            mcc: null
          guami:
            plmnId:
              mnc: mnc
              nid: nid
              mcc: mcc
            amfId: amfId
          vgmlcAddress:
            vgmlcAddressIpv6: 2001:db8:85a3::8a2e:370:7334
            vgmlcFqdn: null
            vgmlcAddressIpv4: 198.51.100.1
        supi: supi
        gpsi: gpsi
    RegistrationLocationInfo:
      required:
      - accessTypeList
      - amfInstanceId
      type: object
      properties:
        amfInstanceId:
          $ref: '#/components/schemas/NfInstanceId'
        guami:
          $ref: '#/components/schemas/Guami'
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        vgmlcAddress:
          $ref: '#/components/schemas/VgmlcAddress'
        accessTypeList:
          maxItems: 2
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AccessType'
      description: |
        This data type contains the information about serving AMF, optional VGMLC and access type related information used by (H)GMLC.
      example:
        amfInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        accessTypeList:
        - 3GPP_ACCESS
        - 3GPP_ACCESS
        plmnId:
          mnc: null
          mcc: null
        guami:
          plmnId:
            mnc: mnc
            nid: nid
            mcc: mcc
          amfId: amfId
        vgmlcAddress:
          vgmlcAddressIpv6: 2001:db8:85a3::8a2e:370:7334
          vgmlcFqdn: null
          vgmlcAddressIpv4: 198.51.100.1
    VgmlcAddress:
      type: object
      properties:
        vgmlcAddressIpv4:
          $ref: '#/components/schemas/Ipv4Addr'
        vgmlcAddressIpv6:
          $ref: '#/components/schemas/Ipv6Addr'
        vgmlcFqdn:
          $ref: '#/components/schemas/Fqdn'
      description: |
        This data type contains the address(es) of VGMLC.  Depending on the names of Vgmlcaddress, it could indicate either VGMLC IPv4 or IPv6 address.
      example:
        vgmlcAddressIpv6: 2001:db8:85a3::8a2e:370:7334
        vgmlcFqdn: null
        vgmlcAddressIpv4: 198.51.100.1
    PeiUpdateInfo:
      required:
      - pei
      type: object
      properties:
        pei:
          $ref: '#/components/schemas/Pei'
      description: This data type contains information about the PEI.
    RegistrationDatasetNames:
      minItems: 2
      uniqueItems: true
      type: array
      description: Represents the UECM registration dataset names.
      items:
        $ref: '#/components/schemas/RegistrationDataSetName'
      x-schema-name: RegistrationDatasetNames
    RegistrationDataSets:
      type: object
      properties:
        amf3Gpp:
          $ref: '#/components/schemas/Amf3GppAccessRegistration'
        amfNon3Gpp:
          $ref: '#/components/schemas/AmfNon3GppAccessRegistration'
        smfRegistration:
          $ref: '#/components/schemas/SmfRegistrationInfo'
        smsf3Gpp:
          $ref: '#/components/schemas/SmsfRegistration'
        smsfNon3Gpp:
          $ref: '#/components/schemas/SmsfRegistration'
        ipSmGw:
          $ref: '#/components/schemas/IpSmGwRegistration'
        nwdafRegistration:
          $ref: '#/components/schemas/NwdafRegistrationInfo'
      description: |
        This data type contains all the attributes related to 3GPP access and non-access registration.
      example:
        smsf3Gpp:
          registrationTime: null
          ueMemoryAvailableInd: true
          supportedFeatures: null
          contextInfo: null
          dataRestorationCallbackUri: null
          smsfSbiSupInd: false
          smsfSetId: null
          smsfDiameterAddress:
            name: null
            realm: null
          lastSynchronizationTime: null
          smsfInstanceId: null
          udrRestartInd: false
          resetIds:
          - resetIds
          - resetIds
          smsfMAPAddress: smsfMAPAddress
          plmnId: null
        amfNon3Gpp:
          registrationTime: null
          supportedFeatures: null
          urrpIndicator: true
          noEeSubscriptionInd: true
          lastSynchronizationTime: null
          vgmlcAddress: null
          adminDeregSubWithdrawn: true
          udrRestartInd: false
          pei: null
          amfEeSubscriptionId: null
          amfInstanceId: null
          imsVoPs: null
          deregCallbackUri: null
          purgeFlag: null
          contextInfo: null
          dataRestorationCallbackUri: null
          ratType: null
          amfServiceNameDereg: null
          amfServiceNamePcscfRest: null
          sorSnpnSiSupported: false
          guami: null
          supi: null
          reRegistrationRequired: true
          disasterRoamingInd: false
          resetIds:
          - resetIds
          - resetIds
          pcscfRestorationCallbackUri: null
          backupAmfInfo:
          - null
          - null
        smfRegistration:
          smfRegistrationList:
          - registrationTime: null
            supportedFeatures: null
            smfInstanceId: null
            smfSetId: smfSetId
            lastSynchronizationTime: null
            pgwIpAddr:
              ipv6Addr: null
              ipv4Addr: null
              ipv6Prefix: 2001:db8:abcd:12::0/64
            udrRestartInd: false
            singleNssai:
              sd: sd
              sst: 153
            pcfId: null
            emergencyServices: true
            pduSessionId: 20
            plmnId: null
            registrationReason: ""
            deregCallbackUri: null
            wildcardInd: true
            contextInfo: null
            dnn: dnn
            dataRestorationCallbackUri: null
            pduSessionReActivationRequired: false
            udmStaleCheckCallbackUri: null
            epdgInd: false
            resetIds:
            - resetIds
            - resetIds
            staleCheckCallbackUri: null
            pcscfRestorationCallbackUri: null
            pgwFqdn: null
          - registrationTime: null
            supportedFeatures: null
            smfInstanceId: null
            smfSetId: smfSetId
            lastSynchronizationTime: null
            pgwIpAddr:
              ipv6Addr: null
              ipv4Addr: null
              ipv6Prefix: 2001:db8:abcd:12::0/64
            udrRestartInd: false
            singleNssai:
              sd: sd
              sst: 153
            pcfId: null
            emergencyServices: true
            pduSessionId: 20
            plmnId: null
            registrationReason: ""
            deregCallbackUri: null
            wildcardInd: true
            contextInfo: null
            dnn: dnn
            dataRestorationCallbackUri: null
            pduSessionReActivationRequired: false
            udmStaleCheckCallbackUri: null
            epdgInd: false
            resetIds:
            - resetIds
            - resetIds
            staleCheckCallbackUri: null
            pcscfRestorationCallbackUri: null
            pgwFqdn: null
        nwdafRegistration:
          nwdafRegistrationList:
          - registrationTime: null
            nwdafSetId: null
            nwdafInstanceId: null
            supportedFeatures: null
            contextInfo: null
            resetIds:
            - resetIds
            - resetIds
            analyticsIds:
            - ""
            - ""
          - registrationTime: null
            nwdafSetId: null
            nwdafInstanceId: null
            supportedFeatures: null
            contextInfo: null
            resetIds:
            - resetIds
            - resetIds
            analyticsIds:
            - ""
            - ""
        smsfNon3Gpp: null
        amf3Gpp:
          registrationTime: null
          supportedFeatures: supportedFeatures
          urrpIndicator: true
          noEeSubscriptionInd: true
          lastSynchronizationTime: null
          vgmlcAddress:
            vgmlcAddressIpv6: 2001:db8:85a3::8a2e:370:7334
            vgmlcFqdn: null
            vgmlcAddressIpv4: 198.51.100.1
          ueReachableInd: ""
          adminDeregSubWithdrawn: true
          udrRestartInd: false
          pei: pei
          amfEeSubscriptionId: null
          drFlag: true
          amfInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          initialRegistrationInd: true
          epsInterworkingInfo:
            registrationTime: 2000-01-23T04:56:07.000+00:00
            epsIwkPgws:
              key:
                smfInstanceId: null
                plmnId:
                  mnc: null
                  mcc: null
                pgwFqdn: null
          imsVoPs: ""
          deregCallbackUri: deregCallbackUri
          purgeFlag: true
          ueSrvccCapability: true
          contextInfo:
            requestHeaders:
            - requestHeaders
            - requestHeaders
            origHeaders:
            - origHeaders
            - origHeaders
          dataRestorationCallbackUri: null
          ratType: ""
          emergencyRegistrationInd: true
          amfServiceNameDereg: ""
          amfServiceNamePcscfRest: null
          sorSnpnSiSupported: false
          guami:
            plmnId:
              mnc: mnc
              nid: nid
              mcc: mcc
            amfId: amfId
          supi: supi
          reRegistrationRequired: true
          disasterRoamingInd: false
          resetIds:
          - resetIds
          - resetIds
          pcscfRestorationCallbackUri: null
          backupAmfInfo:
          - backupAmf: backupAmf
            guamiList:
            - null
            - null
          - backupAmf: backupAmf
            guamiList:
            - null
            - null
          ueMINTCapability: true
        ipSmGw:
          unriIndicator: false
          nfInstanceId: null
          resetIds:
          - resetIds
          - resetIds
          ipSmGwSbiSupInd: false
          ipSmGwDiameterAddress: null
          ipsmgwIpv4: null
          ipSmGwMapAddress: null
          ipsmgwIpv6: null
          ipsmgwFqdn: null
    NwdafRegistration:
      required:
      - analyticsIds
      - nwdafInstanceId
      type: object
      properties:
        nwdafInstanceId:
          $ref: '#/components/schemas/NfInstanceId'
        analyticsIds:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/EventId'
        nwdafSetId:
          $ref: '#/components/schemas/NfSetId'
        registrationTime:
          $ref: '#/components/schemas/DateTime'
        contextInfo:
          $ref: '#/components/schemas/ContextInfo'
        supportedFeatures:
          $ref: '#/components/schemas/SupportedFeatures'
        resetIds:
          minItems: 1
          type: array
          items:
            type: string
      description: The complete set of information relevant to an NWDAF serving the
        UE
      example:
        registrationTime: null
        nwdafSetId: null
        nwdafInstanceId: null
        supportedFeatures: null
        contextInfo: null
        resetIds:
        - resetIds
        - resetIds
        analyticsIds:
        - ""
        - ""
    NwdafRegistrationModification:
      required:
      - nwdafInstanceId
      type: object
      properties:
        nwdafInstanceId:
          $ref: '#/components/schemas/NfInstanceId'
        nwdafSetId:
          $ref: '#/components/schemas/NfSetId'
        analyticsIds:
          type: array
          items:
            $ref: '#/components/schemas/EventId'
        supportedFeatures:
          $ref: '#/components/schemas/SupportedFeatures'
      description: Contains attributes of NwdafRegistration that can be modified using
        PATCH
    SmfRegistrationModification:
      required:
      - smfInstanceId
      type: object
      properties:
        smfInstanceId:
          $ref: '#/components/schemas/NfInstanceId'
        smfSetId:
          $ref: '#/components/schemas/NfSetId'
        pgwFqdn:
          $ref: '#/components/schemas/FqdnRm'
      description: Contains attributes of SmfRegistration that can be modified using
        PATCH
    DataRestorationNotification:
      type: object
      properties:
        lastReplicationTime:
          $ref: '#/components/schemas/DateTime'
        recoveryTime:
          $ref: '#/components/schemas/DateTime'
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        supiRanges:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SupiRange'
        gpsiRanges:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/IdentityRange'
        resetIds:
          minItems: 1
          type: array
          items:
            type: string
        sNssaiList:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Snssai'
        dnnList:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Dnn'
        udmGroupId:
          $ref: '#/components/schemas/NfGroupId'
      description: Contains identities representing those UEs potentially affected
        by a data-loss event at the UDR
    RoamingInfoUpdate:
      required:
      - servingPlmn
      type: object
      properties:
        roaming:
          type: boolean
        servingPlmn:
          $ref: '#/components/schemas/PlmnId'
      description: Contains the Roaming Information Update
      example:
        roaming: true
        servingPlmn:
          mnc: null
          mcc: null
    PcscfAddress:
      type: object
      properties:
        ipv4Addrs:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Ipv4Addr'
        ipv6Addrs:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Ipv6Addr'
        fqdn:
          $ref: '#/components/schemas/Fqdn'
      description: Contains the addressing information (IP addresses and/or FQDN)
        of the P-CSCF
      anyOf:
      - required:
        - ipv4Addrs
      - required:
        - ipv6Addrs
      - required:
        - fqdn
    NwdafRegistrationInfo:
      required:
      - nwdafRegistrationList
      type: object
      properties:
        nwdafRegistrationList:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/NwdafRegistration'
      description: List of NwdafRegistration
      example:
        nwdafRegistrationList:
        - registrationTime: null
          nwdafSetId: null
          nwdafInstanceId: null
          supportedFeatures: null
          contextInfo: null
          resetIds:
          - resetIds
          - resetIds
          analyticsIds:
          - ""
          - ""
        - registrationTime: null
          nwdafSetId: null
          nwdafInstanceId: null
          supportedFeatures: null
          contextInfo: null
          resetIds:
          - resetIds
          - resetIds
          analyticsIds:
          - ""
          - ""
    RoutingInfoSmRequest:
      type: object
      properties:
        ipSmGwInd:
          type: boolean
          default: false
        correlationId:
          type: string
        supportedFeatures:
          $ref: '#/components/schemas/SupportedFeatures'
      description: Request body of the send-routing-info-sm custom operation
    RoutingInfoSmResponse:
      type: object
      properties:
        supi:
          $ref: '#/components/schemas/Supi'
        smsf3Gpp:
          $ref: '#/components/schemas/SmsfRegistration'
        smsfNon3Gpp:
          $ref: '#/components/schemas/SmsfRegistration'
        ipSmGw:
          $ref: '#/components/schemas/IpSmGwInfo'
        smsRouter:
          $ref: '#/components/schemas/SmsRouterInfo'
      description: Addressing information of available nodes for SMS delivery
      example:
        smsf3Gpp:
          registrationTime: null
          ueMemoryAvailableInd: true
          supportedFeatures: null
          contextInfo: null
          dataRestorationCallbackUri: null
          smsfSbiSupInd: false
          smsfSetId: null
          smsfDiameterAddress:
            name: null
            realm: null
          lastSynchronizationTime: null
          smsfInstanceId: null
          udrRestartInd: false
          resetIds:
          - resetIds
          - resetIds
          smsfMAPAddress: smsfMAPAddress
          plmnId: null
        smsfNon3Gpp: null
        smsRouter:
          routerFqdn: routerFqdn
          nfInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          routerIpv4: 198.51.100.1
          diameterAddress:
            name: null
            realm: null
          mapAddress: mapAddress
          routerIpv6: 2001:db8:85a3::8a2e:370:7334
        supi: supi
        ipSmGw:
          ipSmGwGuidance:
            recommDeliveryTime: 373
            minDeliveryTime: 75
          ipSmGwRegistration:
            unriIndicator: false
            nfInstanceId: null
            resetIds:
            - resetIds
            - resetIds
            ipSmGwSbiSupInd: false
            ipSmGwDiameterAddress: null
            ipsmgwIpv4: null
            ipSmGwMapAddress: null
            ipsmgwIpv6: null
            ipsmgwFqdn: null
    IpSmGwInfo:
      type: object
      properties:
        ipSmGwRegistration:
          $ref: '#/components/schemas/IpSmGwRegistration'
        ipSmGwGuidance:
          $ref: '#/components/schemas/IpSmGwGuidance'
      description: Contains the IP-SM-GW Information
      example:
        ipSmGwGuidance:
          recommDeliveryTime: 373
          minDeliveryTime: 75
        ipSmGwRegistration:
          unriIndicator: false
          nfInstanceId: null
          resetIds:
          - resetIds
          - resetIds
          ipSmGwSbiSupInd: false
          ipSmGwDiameterAddress: null
          ipsmgwIpv4: null
          ipSmGwMapAddress: null
          ipsmgwIpv6: null
          ipsmgwFqdn: null
    IpSmGwGuidance:
      required:
      - minDeliveryTime
      - recommDeliveryTime
      type: object
      properties:
        minDeliveryTime:
          maximum: 600
          minimum: 30
          type: integer
        recommDeliveryTime:
          maximum: 600
          minimum: 30
          type: integer
      description: |
        Contains guidance information (e.g. minimum and recommended delivery times) of the IP-SM-GW
      example:
        recommDeliveryTime: 373
        minDeliveryTime: 75
    SmsRouterInfo:
      type: object
      properties:
        nfInstanceId:
          $ref: '#/components/schemas/NfInstanceId'
        diameterAddress:
          $ref: '#/components/schemas/NetworkNodeDiameterAddress'
        mapAddress:
          $ref: '#/components/schemas/E164Number'
        routerIpv4:
          $ref: '#/components/schemas/Ipv4Addr'
        routerIpv6:
          $ref: '#/components/schemas/Ipv6Addr'
        routerFqdn:
          $ref: '#/components/schemas/Fqdn'
      description: Addressing information of the SMS Router configured at the UDM
      example:
        routerFqdn: routerFqdn
        nfInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        routerIpv4: 198.51.100.1
        diameterAddress:
          name: null
          realm: null
        mapAddress: mapAddress
        routerIpv6: 2001:db8:85a3::8a2e:370:7334
    SmsfRegistrationModification:
      required:
      - smsfInstanceId
      type: object
      properties:
        smsfInstanceId:
          $ref: '#/components/schemas/NfInstanceId'
        smsfSetId:
          $ref: '#/components/schemas/NfSetId'
        ueMemoryAvailableInd:
          type: boolean
          enum:
          - true
      description: Contains attributes of SmsfRegistration that can be modified using
        PATCH
    ReauthNotificationInfo:
      required:
      - supi
      type: object
      properties:
        supi:
          $ref: '#/components/schemas/Supi'
      description: Contains the SUPI to identify the UE that is subject to reauthentication
    AuthTriggerInfo:
      type: object
      properties:
        supi:
          $ref: '#/components/schemas/Supi'
    DeregistrationRespData:
      type: object
      properties:
        smfEventRemovedInd:
          type: boolean
          enum:
          - true
    PurgeFlag:
      type: boolean
      description: |
        This flag indicates whether an AMF is deregistered. This attribute may be included in notifications sent by the UDR to the UDM if purgeFlag is also set to true in the same notification.
    E164Number:
      pattern: "^[0-9]{1,15}$"
      type: string
      description: |
        This data type mentions International E.164 number of the SMSF; shall be present if the SMSF supports MAP.
    DualRegistrationFlag:
      type: boolean
      description: |
        This data type indicates that the UDM+HSS is requested not to send S6a-CLR to the registered MME/SGSN (if any).
    ImsVoPs:
      description: |
        It represents the information indicating homogeneity of IMS Voice over PS Sessions support for the UE
      anyOf:
      - type: string
        enum:
        - HOMOGENEOUS_SUPPORT
        - HOMOGENEOUS_NON_SUPPORT
        - NON_HOMOGENEOUS_OR_UNKNOWN
      - type: string
        description: |
          This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.
    DeregistrationReason:
      description: |
        It represents the reason of Deregistration Notification.
      anyOf:
      - type: string
        enum:
        - UE_INITIAL_REGISTRATION
        - UE_REGISTRATION_AREA_CHANGE
        - SUBSCRIPTION_WITHDRAWN
        - 5GS_TO_EPS_MOBILITY
        - 5GS_TO_EPS_MOBILITY_UE_INITIAL_REGISTRATION
        - REREGISTRATION_REQUIRED
        - SMF_CONTEXT_TRANSFERRED
        - DUPLICATE_PDU_SESSION
        - PDU_SESSION_REACTIVATION_REQUIRED
        - DISASTER_CONDITION_TERMINATED
        - OPERATOR_DETERMINED_BARRING
      - type: string
        description: |
          This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.
    RegistrationReason:
      description: |
        Indicates NF registration reason.
      anyOf:
      - type: string
        enum:
        - SMF_CONTEXT_TRANSFERRED
      - type: string
        description: |
          This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.
    RegistrationDataSetName:
      description: |
        Indicates the names of registration data sets to be retrieved.
      anyOf:
      - type: string
        enum:
        - AMF_3GPP
        - AMF_NON_3GPP
        - SMF_PDU_SESSIONS
        - SMSF_3GPP
        - SMSF_NON_3GPP
        - IP_SM_GW
        - NWDAF
      - type: string
        description: |
          This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.
    UeReachableInd:
      description: UE Reachable Indication
      anyOf:
      - type: string
        enum:
        - REACHABLE
        - NOT_REACHABLE
        - UNKNOWN
      - type: string
        description: |
          This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.
    VarUeId:
      pattern: "^(imsi-[0-9]{5,15}|nai-.+|msisdn-[0-9]{5,15}|extid-[^@]+@[^@]+|gci-.+|gli-.+|.+)$"
      type: string
      description: String represents the SUPI or GPSI
    SupportedFeatures:
      pattern: "^[A-Fa-f0-9]*$"
      type: string
      description: |
        A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
    Snssai:
      required:
      - sst
      type: object
      properties:
        sst:
          maximum: 255
          minimum: 0
          type: integer
          description: "Unsigned integer, within the range 0 to 255, representing\
            \ the Slice/Service Type.  It indicates the expected Network Slice behaviour\
            \ in terms of features and services. Values 0 to 127 correspond to the\
            \ standardized SST range. Values 128 to 255 correspond  to the Operator-specific\
            \ range. See clause 28.4.2 of 3GPP TS 23.003. Standardized values are\
            \ defined in clause 5.15.2.2 of 3GPP TS 23.501. \n"
        sd:
          pattern: "^[A-Fa-f0-9]{6}$"
          type: string
          description: |
            3-octet string, representing the Slice Differentiator, in hexadecimal representation. Each character in the string shall take a value of "0" to "9", "a" to "f" or "A" to "F" and shall represent 4 bits. The most significant character representing the 4 most significant bits of the SD shall appear first in the string, and the character representing the 4 least significant bit of the SD shall appear last in the string. This is an optional parameter that complements the Slice/Service type(s) to allow to  differentiate amongst multiple Network Slices of the same Slice/Service type. This IE shall be absent if no SD value is associated with the SST.
      description: |
        When Snssai needs to be converted to string (e.g. when used in maps as key), the string shall be composed of one to three digits "sst" optionally followed by "-" and 6 hexadecimal digits "sd".
      example:
        sd: sd
        sst: 153
    Dnn:
      type: string
      description: |
        String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. "Label1.Label2.Label3").
    ProblemDetails:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Uri'
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of
            the problem.
        instance:
          $ref: '#/components/schemas/Uri'
        cause:
          type: string
          description: |
            A machine-readable application error cause specific to this occurrence of the problem.  This IE should be present and provide application-related error information, if available.
        invalidParams:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/InvalidParam'
        supportedFeatures:
          $ref: '#/components/schemas/SupportedFeatures'
        accessTokenError:
          $ref: '#/components/schemas/AccessTokenErr'
        accessTokenRequest:
          $ref: '#/components/schemas/AccessTokenReq'
        nrfId:
          $ref: '#/components/schemas/Fqdn'
        supportedApiVersions:
          minItems: 1
          type: array
          items:
            type: string
        noProfileMatchInfo:
          $ref: '#/components/schemas/NoProfileMatchInfo'
      description: Provides additional information in an error response.
    Uri:
      type: string
      description: String providing an URI formatted according to RFC 3986.
    InvalidParam:
      required:
      - param
      type: object
      properties:
        param:
          type: string
          description: |
            If the invalid parameter is an attribute in a JSON body, this IE shall contain the  attribute's name and shall be encoded as a JSON Pointer. If the invalid parameter is  an HTTP header, this IE shall be formatted as the concatenation of the string "header "  plus the name of such header. If the invalid parameter is a query parameter, this IE  shall be formatted as the concatenation of the string "query " plus the name of such  query parameter. If the invalid parameter is a variable part in the path of a resource  URI, this IE shall contain the name of the variable, including the symbols "{" and "}"  used in OpenAPI specification as the notation to represent variable path segments.
        reason:
          type: string
          description: |
            A human-readable reason, e.g. "must be a positive integer". In cases involving failed  operations in a PATCH request, the reason string should identify the operation that  failed using the operation's array index to assist in correlation of the invalid  parameter with the failed operation, e.g." Replacement value invalid for attribute  (failed operation index= 4)"
      description: It contains an invalid parameter and a related description.
    Fqdn:
      maxLength: 253
      minLength: 4
      pattern: "^([0-9A-Za-z]([-0-9A-Za-z]{0,61}[0-9A-Za-z])?\\.)+[A-Za-z]{2,63}\\\
        .?$"
      type: string
      description: Fully Qualified Domain Name
    Supi:
      pattern: "^(imsi-[0-9]{5,15}|nai-.+|gci-.+|gli-.+|.+)$"
      type: string
      description: "String identifying a Supi that shall contain either an IMSI, a\
        \ network specific identifier,\na Global Cable Identifier (GCI) or a Global\
        \ Line Identifier (GLI) as specified in clause \n2.2A of 3GPP TS 23.003. It\
        \ shall be formatted as follows\n - for an IMSI \"imsi-<imsi>\", where <imsi>\
        \ shall be formatted according to clause 2.2\n   of 3GPP TS 23.003 that describes\
        \ an IMSI.\n - for a network specific identifier \"nai-<nai>, where <nai>\
        \ shall be formatted\n   according to clause 28.7.2 of 3GPP TS 23.003 that\
        \ describes an NAI.\n - for a GCI \"gci-<gci>\", where <gci> shall be formatted\
        \ according to clause 28.15.2\n   of 3GPP TS 23.003.\n - for a GLI \"gli-<gli>\"\
        , where <gli> shall be formatted according to clause 28.16.2 of\n   3GPP TS\
        \ 23.003.To enable that the value is used as part of an URI, the string shall\n\
        \   only contain characters allowed according to the \"lower-with-hyphen\"\
        \ naming convention\n   defined in 3GPP TS 29.501.\n"
    RedirectResponse:
      type: object
      properties:
        cause:
          type: string
        targetScp:
          $ref: '#/components/schemas/Uri'
        targetSepp:
          $ref: '#/components/schemas/Uri'
      description: |
        The response shall include a Location header field containing a different URI  (pointing to a different URI of an other service instance), or the same URI if a request  is redirected to the same target resource via a different SCP.
    PatchResult:
      required:
      - report
      type: object
      properties:
        report:
          minItems: 1
          type: array
          description: |
            The execution report contains an array of report items. Each report item indicates one  failed modification.
          items:
            $ref: '#/components/schemas/ReportItem'
      description: The execution report result on failed modification.
      example:
        report:
        - path: path
          reason: reason
        - path: path
          reason: reason
    ReportItem:
      required:
      - path
      type: object
      properties:
        path:
          type: string
          description: |
            Contains a JSON pointer value (as defined in IETF RFC 6901) that references a  location of a resource to which the modification is subject.
        reason:
          type: string
          description: |
            A human-readable reason providing details on the reported modification failure.  The reason string should identify the operation that failed using the operation's  array index to assist in correlation of the invalid parameter with the failed  operation, e.g. "Replacement value invalid for attribute (failed operation index= 4)".
      description: indicates performed modivications.
      example:
        path: path
        reason: reason
    PduSessionId:
      maximum: 255
      minimum: 0
      type: integer
      description: "Unsigned integer identifying a PDU session, within the range 0\
        \ to 255, as specified in  clause 11.2.3.1b, bits 1 to 8, of 3GPP TS 24.007.\
        \ If the PDU Session ID is allocated by the  Core Network for UEs not supporting\
        \ N1 mode, reserved range 64 to 95 is used. PDU Session ID  within the reserved\
        \ range is only visible in the Core Network. \n"
    NfSetId:
      type: string
      description: "NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted\
        \ as the following string \"set<Set ID>.<nftype>set.5gc.mnc<MNC>.mcc<MCC>\"\
        , or  \"set<SetID>.<NFType>set.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC>\
        \ encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)  <MNC>\
        \ encoding the Mobile Network Code part of the PLMN, comprising 3 digits.\
        \ \n  If there are only 2 significant digits in the MNC, one \"0\" digit shall\
        \ be inserted \n  at the left side to fill the 3 digits coding of MNC.  Pattern:\
        \ '^[0-9]{3}$'\n<NFType> encoded as a value defined in Table 6.1.6.3.3-1 of\
        \ 3GPP TS 29.510 but \n  with lower case characters <Set ID> encoded as a\
        \ string of characters consisting of \n  alphabetic characters (A-Z and a-z),\
        \ digits (0-9) and/or the hyphen (-) and that \n  shall end with either an\
        \ alphabetic character or a digit. \n"
    NfInstanceId:
      type: string
      description: "String uniquely identifying a NF instance. The format of the NF\
        \ Instance ID shall be a  Universally Unique Identifier (UUID) version 4,\
        \ as described in IETF RFC 4122. \n"
      format: uuid
    Gpsi:
      pattern: "^(msisdn-[0-9]{5,15}|extid-[^@]+@[^@]+|.+)$"
      type: string
      description: "String identifying a Gpsi shall contain either an External Id\
        \ or an MSISDN.  It shall be formatted as follows -External Identifier= \"\
        extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2\
        \ of 3GPP TS 23.003 that describes an  External Identifier. \n"
    EventId:
      description: "Represents the analytics type.  \nPossible values are:\n- LOAD_LEVEL_INFORMATION:\
        \ Represent the analytics of load level information of corresponding\n  network\
        \ slice.\n- NETWORK_PERFORMANCE: Represent the analytics of network performance\
        \ information.\n- NF_LOAD: Indicates that the event subscribed is NF Load.\n\
        - SERVICE_EXPERIENCE: Represent the analytics of service experience information\
        \ of the\n  specific applications.\n- UE_MOBILITY: Represent the analytics\
        \ of UE mobility.\n- UE_COMMUNICATION: Represent the analytics of UE communication.\n\
        - QOS_SUSTAINABILITY: Represent the analytics of QoS sustainability information\
        \ in the\n  certain area.\n- ABNORMAL_BEHAVIOUR: Indicates that the event\
        \ subscribed is abnormal behaviour information.\n- USER_DATA_CONGESTION: Represent\
        \ the analytics of the user data congestion in the certain\n  area.\n- NSI_LOAD_LEVEL:\
        \ Represent the analytics of Network Slice and the optionally associated\n\
        \  Network Slice Instance.\n- SM_CONGESTION: Represent the analytics of Session\
        \ Management congestion control experience\n  information for specific DNN\
        \ and/or S-NSSAI.\n- DISPERSION: Represents the analytics of dispersion.\n\
        - RED_TRANS_EXP: Represents the analytics of Redundant Transmission Experience.\n\
        - WLAN_PERFORMANCE: Represents the analytics of WLAN performance.\n- DN_PERFORMANCE:\
        \ Represents the analytics of DN performance.\n- PFD_DETERMINATION: Represents\
        \ the analytics of PFD Determination information for known application identifier(s).\n\
        - PDU_SESSION_TRAFFIC: Represents the analytics of PDU Session traffic.\n\
        - E2E_DATA_VOL_TRANS_TIME: Represents the analytics of E2E data volume transfer\
        \ time.\n- MOVEMENT_BEHAVIOUR: Represents the analytics of the Movement Behaviour\
        \ information.\n- LOC_ACCURACY: Represents the analytics of location accuracy.\n\
        - RELATIVE_PROXIMITY: Represents the analytics of Relative Proximity information.\n"
      anyOf:
      - type: string
        enum:
        - LOAD_LEVEL_INFORMATION
        - NETWORK_PERFORMANCE
        - NF_LOAD
        - SERVICE_EXPERIENCE
        - UE_MOBILITY
        - UE_COMMUNICATION
        - QOS_SUSTAINABILITY
        - ABNORMAL_BEHAVIOUR
        - USER_DATA_CONGESTION
        - NSI_LOAD_LEVEL
        - SM_CONGESTION
        - DISPERSION
        - RED_TRANS_EXP
        - WLAN_PERFORMANCE
        - DN_PERFORMANCE
        - PFD_DETERMINATION
        - PDU_SESSION_TRAFFIC
        - E2E_DATA_VOL_TRANS_TIME
        - MOVEMENT_BEHAVIOUR
        - LOC_ACCURACY
        - RELATIVE_PROXIMITY
      - type: string
        description: |
          This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.
    Pei:
      pattern: "^(imei-[0-9]{15}|imeisv-[0-9]{16}|mac((-[0-9a-fA-F]{2}){6})(-untrusted)?|eui((-[0-9a-fA-F]{2}){8})|.+)$"
      type: string
      description: "String representing a Permanent Equipment Identifier that may\
        \ contain - an IMEI or IMEISV, as  specified in clause 6.2 of 3GPP TS 23.003;\
        \ a MAC address for a 5G-RG or FN-RG via  wireline  access, with an indication\
        \ that this address cannot be trusted for regulatory purpose if this  address\
        \ cannot be used as an Equipment Identifier of the FN-RG, as specified in\
        \ clause 4.7.7  of 3GPP TS23.316. Examples are imei-012345678901234 or imeisv-0123456789012345.\
        \ \n"
    ServiceName:
      description: Service names known to NRF
      anyOf:
      - type: string
        enum:
        - nnrf-nfm
        - nnrf-disc
        - nnrf-oauth2
        - nudm-sdm
        - nudm-uecm
        - nudm-ueau
        - nudm-ee
        - nudm-pp
        - nudm-niddau
        - nudm-mt
        - nudm-ssau
        - nudm-rsds
        - nudm-ueid
        - namf-comm
        - namf-evts
        - namf-mt
        - namf-loc
        - namf-mbs-comm
        - namf-mbs-bc
        - nsmf-pdusession
        - nsmf-event-exposure
        - nsmf-nidd
        - nausf-auth
        - nausf-sorprotection
        - nausf-upuprotection
        - nnef-pfdmanagement
        - nnef-smcontext
        - nnef-eventexposure
        - nnef-eas-deployment
        - nnef-dnai-mapping
        - nnef-traffic-influence-data
        - nnef-ecs-addr-cfg-info
        - nnef-ueid
        - 3gpp-cp-parameter-provisioning
        - 3gpp-device-triggering
        - 3gpp-bdt
        - 3gpp-traffic-influence
        - 3gpp-chargeable-party
        - 3gpp-as-session-with-qos
        - 3gpp-msisdn-less-mo-sms
        - 3gpp-service-parameter
        - 3gpp-monitoring-event
        - 3gpp-nidd-configuration-trigger
        - 3gpp-nidd
        - 3gpp-analyticsexposure
        - 3gpp-racs-parameter-provisioning
        - 3gpp-ecr-control
        - 3gpp-applying-bdt-policy
        - 3gpp-mo-lcs-notify
        - 3gpp-time-sync
        - 3gpp-am-influence
        - 3gpp-am-policyauthorization
        - 3gpp-akma
        - 3gpp-eas-deployment
        - 3gpp-iptvconfiguration
        - 3gpp-mbs-tmgi
        - 3gpp-mbs-session
        - 3gpp-authentication
        - 3gpp-asti
        - 3gpp-pdtq-policy-negotiation
        - 3gpp-musa
        - npcf-am-policy-control
        - npcf-smpolicycontrol
        - npcf-policyauthorization
        - npcf-bdtpolicycontrol
        - npcf-eventexposure
        - npcf-ue-policy-control
        - npcf-am-policyauthorization
        - npcf-pdtq-policy-control
        - npcf-mbspolicycontrol
        - npcf-mbspolicyauth
        - nsmsf-sms
        - nnssf-nsselection
        - nnssf-nssaiavailability
        - nudr-dr
        - nudr-group-id-map
        - nlmf-loc
        - n5g-eir-eic
        - nbsf-management
        - nchf-spendinglimitcontrol
        - nchf-convergedcharging
        - nchf-offlineonlycharging
        - nnwdaf-eventssubscription
        - nnwdaf-analyticsinfo
        - nnwdaf-datamanagement
        - nnwdaf-mlmodelprovision
        - nnwdaf-mlmodeltraining
        - nnwdaf-mlmodelmonitor
        - nnwdaf-roamingdata
        - nnwdaf-roaminganalytics
        - ngmlc-loc
        - nucmf-provisioning
        - nucmf-uecapabilitymanagement
        - nhss-sdm
        - nhss-uecm
        - nhss-ueau
        - nhss-ee
        - nhss-ims-sdm
        - nhss-ims-uecm
        - nhss-ims-ueau
        - nhss-gba-sdm
        - nhss-gba-ueau
        - nsepp-telescopic
        - nsoraf-sor
        - nspaf-secured-packet
        - nudsf-dr
        - nudsf-timer
        - nnssaaf-nssaa
        - nnssaaf-aiw
        - naanf-akma
        - n5gddnmf-discovery
        - nmfaf-3dadatamanagement
        - nmfaf-3cadatamanagement
        - neasdf-dnscontext
        - neasdf-baselinednspattern
        - ndccf-datamanagement
        - ndccf-contextmanagement
        - nnsacf-nsac
        - nnsacf-slice-ee
        - nmbsmf-tmgi
        - nmbsmf-mbssession
        - nadrf-datamanagement
        - nadrf-mlmodelmanagement
        - nbsp-gba
        - ntsctsf-time-sync
        - ntsctsf-qos-tscai
        - ntsctsf-asti
        - npkmf-keyreq
        - npkmf-userid
        - npkmf-discovery
        - nmnpf-npstatus
        - niwmsc-smservice
        - nmbsf-mbs-us
        - nmbsf-mbs-ud-ingest
        - nmbstf-distsession
        - npanf-prosekey
        - npanf-userid
        - nupf-ee
        - nupf-gueip
        - naf-prose
        - naf-eventexposure
      - type: string
    Guami:
      required:
      - amfId
      - plmnId
      type: object
      properties:
        plmnId:
          $ref: '#/components/schemas/PlmnIdNid'
        amfId:
          $ref: '#/components/schemas/AmfId'
      description: "Globally Unique AMF Identifier constructed out of PLMN, Network\
        \ and AMF identity."
      example:
        plmnId:
          mnc: mnc
          nid: nid
          mcc: mcc
        amfId: amfId
    PlmnIdNid:
      required:
      - mcc
      - mnc
      type: object
      properties:
        mcc:
          $ref: '#/components/schemas/Mcc'
        mnc:
          $ref: '#/components/schemas/Mnc'
        nid:
          $ref: '#/components/schemas/Nid'
      description: |
        Contains the serving core network operator PLMN ID and, for an SNPN, the NID that together with the PLMN ID identifies the SNPN.
      example:
        mnc: mnc
        nid: nid
        mcc: mcc
    Mcc:
      pattern: "^\\d{3}$"
      type: string
      description: "Mobile Country Code part of the PLMN, comprising 3 digits, as\
        \ defined in clause 9.3.3.5 of 3GPP TS 38.413. \n"
    Mnc:
      pattern: "^\\d{2,3}$"
      type: string
      description: "Mobile Network Code part of the PLMN, comprising 2 or 3 digits,\
        \ as defined in  clause 9.3.3.5 of 3GPP TS 38.413. \n"
    Nid:
      pattern: "^[A-Fa-f0-9]{11}$"
      type: string
      description: "This represents the Network Identifier, which together with a\
        \ PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS 23.501\
        \ clause 5.30.2.1). \n"
    AmfId:
      pattern: "^[A-Fa-f0-9]{6}$"
      type: string
      description: "String identifying the AMF ID composed of AMF Region ID (8 bits),\
        \ AMF Set ID (10 bits) and AMF  Pointer (6 bits) as specified in clause 2.10.1\
        \ of 3GPP TS 23.003. It is encoded as a string of  6 hexadecimal characters\
        \ (i.e., 24 bits). \n"
    BackupAmfInfo:
      required:
      - backupAmf
      type: object
      properties:
        backupAmf:
          $ref: '#/components/schemas/AmfName'
        guamiList:
          minItems: 1
          type: array
          description: |
            If present, this IE shall contain the list of GUAMI(s) (supported by the AMF) for which the backupAmf IE applies.
          items:
            $ref: '#/components/schemas/Guami'
      description: Provides details of the Backup AMF.
      example:
        backupAmf: backupAmf
        guamiList:
        - null
        - null
    AmfName:
      $ref: '#/components/schemas/Fqdn'
    RatType:
      description: Indicates the radio access used.
      anyOf:
      - type: string
        enum:
        - NR
        - EUTRA
        - WLAN
        - VIRTUAL
        - NBIOT
        - WIRELINE
        - WIRELINE_CABLE
        - WIRELINE_BBF
        - LTE-M
        - NR_U
        - EUTRA_U
        - TRUSTED_N3GA
        - TRUSTED_WLAN
        - UTRA
        - GERA
        - NR_LEO
        - NR_MEO
        - NR_GEO
        - NR_OTHER_SAT
        - NR_REDCAP
        - WB_E_UTRAN_LEO
        - WB_E_UTRAN_MEO
        - WB_E_UTRAN_GEO
        - WB_E_UTRAN_OTHERSAT
        - NB_IOT_LEO
        - NB_IOT_MEO
        - NB_IOT_GEO
        - NB_IOT_OTHERSAT
        - LTE_M_LEO
        - LTE_M_MEO
        - LTE_M_GEO
        - LTE_M_OTHERSAT
        - NR_EREDCAP
      - type: string
    DateTime:
      type: string
      description: string with format 'date-time' as defined in OpenAPI.
      format: date-time
    ContextInfo:
      type: object
      properties:
        origHeaders:
          minItems: 1
          type: array
          items:
            type: string
        requestHeaders:
          minItems: 1
          type: array
          items:
            type: string
      example:
        requestHeaders:
        - requestHeaders
        - requestHeaders
        origHeaders:
        - origHeaders
        - origHeaders
    PlmnId:
      required:
      - mcc
      - mnc
      type: object
      properties:
        mcc:
          $ref: '#/components/schemas/Mcc'
        mnc:
          $ref: '#/components/schemas/Mnc'
      description: |
        When PlmnId needs to be converted to string (e.g. when used in maps as key), the string  shall be composed of three digits "mcc" followed by "-" and two or three digits "mnc".
      example:
        mnc: null
        mcc: null
    IpAddress:
      type: object
      properties:
        ipv4Addr:
          $ref: '#/components/schemas/Ipv4Addr'
        ipv6Addr:
          $ref: '#/components/schemas/Ipv6Addr'
        ipv6Prefix:
          $ref: '#/components/schemas/Ipv6Prefix'
      example:
        ipv6Addr: null
        ipv4Addr: null
        ipv6Prefix: 2001:db8:abcd:12::0/64
      oneOf:
      - required:
        - ipv4Addr
      - required:
        - ipv6Addr
      - required:
        - ipv6Prefix
    AccessType:
      type: string
      description: Indicates whether the access is  via 3GPP or via non-3GPP.
      enum:
      - 3GPP_ACCESS
      - NON_3GPP_ACCESS
    DiameterIdentity:
      $ref: '#/components/schemas/Fqdn'
    Ipv4Addr:
      pattern: "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$"
      type: string
      description: |
        String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166.
      example: 198.51.100.1
    Ipv6Addr:
      type: string
      description: |
        String identifying an IPv6 address formatted according to clause 4 of RFC5952. The mixed IPv4 IPv6 notation according to clause 5 of RFC5952 shall not be used.
      example: 2001:db8:85a3::8a2e:370:7334
      allOf:
      - pattern: "^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))$"
      - pattern: "^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))$"
    FqdnRm:
      description: "Fully Qualified Domain Name, but it also allows the null value"
      anyOf:
      - $ref: '#/components/schemas/Fqdn'
      - $ref: '#/components/schemas/NullValue'
    NullValue:
      type: string
      description: JSON's null value.
      enum:
      - null
    SupiRange:
      type: object
      properties:
        start:
          pattern: "^[0-9]+$"
          type: string
        end:
          pattern: "^[0-9]+$"
          type: string
        pattern:
          type: string
      description: |
        A range of SUPIs (subscriber identities), either based on a numeric range, or based on regular-expression matching
      oneOf:
      - required:
        - end
        - start
      - required:
        - pattern
    IdentityRange:
      type: object
      properties:
        start:
          pattern: "^[0-9]+$"
          type: string
        end:
          pattern: "^[0-9]+$"
          type: string
        pattern:
          type: string
      description: |
        A range of GPSIs (subscriber identities), either based on a numeric range, or based on regular-expression matching
      oneOf:
      - required:
        - end
        - start
      - required:
        - pattern
    NfGroupId:
      type: string
      description: Identifier of a group of NFs.
    AccessTokenErr:
      required:
      - error
      type: object
      properties:
        error:
          type: string
          enum:
          - invalid_request
          - invalid_client
          - invalid_grant
          - unauthorized_client
          - unsupported_grant_type
          - invalid_scope
        error_description:
          type: string
        error_uri:
          type: string
      description: Error returned in the access token response message
    AccessTokenReq:
      required:
      - grant_type
      - nfInstanceId
      - scope
      type: object
      properties:
        grant_type:
          type: string
          enum:
          - client_credentials
        nfInstanceId:
          $ref: '#/components/schemas/NfInstanceId'
        nfType:
          $ref: '#/components/schemas/NFType'
        targetNfType:
          $ref: '#/components/schemas/NFType'
        scope:
          pattern: "^([a-zA-Z0-9_:-]+)( [a-zA-Z0-9_:-]+)*$"
          type: string
        targetNfInstanceId:
          $ref: '#/components/schemas/NfInstanceId'
        requesterPlmn:
          $ref: '#/components/schemas/PlmnId'
        requesterPlmnList:
          minItems: 2
          type: array
          items:
            $ref: '#/components/schemas/PlmnId'
        requesterSnssaiList:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Snssai'
        requesterFqdn:
          $ref: '#/components/schemas/Fqdn'
        requesterSnpnList:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/PlmnIdNid'
        targetPlmn:
          $ref: '#/components/schemas/PlmnId'
        targetSnpn:
          $ref: '#/components/schemas/PlmnIdNid'
        targetSnssaiList:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Snssai'
        targetNsiList:
          minItems: 1
          type: array
          items:
            type: string
        targetNfSetId:
          $ref: '#/components/schemas/NfSetId'
        targetNfServiceSetId:
          $ref: '#/components/schemas/NfServiceSetId'
        hnrfAccessTokenUri:
          $ref: '#/components/schemas/Uri'
        sourceNfInstanceId:
          $ref: '#/components/schemas/NfInstanceId'
      description: Contains information related to the access token request
    NoProfileMatchInfo:
      required:
      - reason
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/NoProfileMatchReason'
        queryParamCombinationList:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/QueryParamCombination'
      description: Provides the reason for not finding NF matching the search criteria
    NoProfileMatchReason:
      description: No Profile Match Reason
      anyOf:
      - type: string
        enum:
        - REQUESTER_PLMN_NOT_ALLOWED
        - TARGET_NF_SUSPENDED
        - TARGET_NF_UNDISCOVERABLE
        - QUERY_PARAMS_COMBINATION_NO_MATCH
        - TARGET_NF_TYPE_NOT_SUPPORTED
        - UNSPECIFIED
      - type: string
    QueryParamCombination:
      required:
      - queryParams
      type: object
      properties:
        queryParams:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/QueryParameter'
      description: Contains a list of Query Parameters
    QueryParameter:
      required:
      - name
      - value
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      description: Contains the name and value of a query parameter
    Ipv6Prefix:
      type: string
      description: |
        String identifying an IPv6 address prefix formatted according to clause 4 of RFC 5952. IPv6Prefix data type may contain an individual /128 IPv6 address.
      example: 2001:db8:abcd:12::0/64
      allOf:
      - pattern: "^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))(\\\
          /(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
      - pattern: "^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))(\\\
          /.+)$"
    NFType:
      description: NF types known to NRF
      anyOf:
      - type: string
        enum:
        - NRF
        - UDM
        - AMF
        - SMF
        - AUSF
        - NEF
        - PCF
        - SMSF
        - NSSF
        - UDR
        - LMF
        - GMLC
        - 5G_EIR
        - SEPP
        - UPF
        - N3IWF
        - AF
        - UDSF
        - BSF
        - CHF
        - NWDAF
        - PCSCF
        - CBCF
        - HSS
        - UCMF
        - SOR_AF
        - SPAF
        - MME
        - SCSAS
        - SCEF
        - SCP
        - NSSAAF
        - ICSCF
        - SCSCF
        - DRA
        - IMS_AS
        - AANF
        - 5G_DDNMF
        - NSACF
        - MFAF
        - EASDF
        - DCCF
        - MB_SMF
        - TSCTSF
        - ADRF
        - GBA_BSF
        - CEF
        - MB_UPF
        - NSWOF
        - PKMF
        - MNPF
        - SMS_GMSC
        - SMS_IWMSC
        - MBSF
        - MBSTF
        - PANF
        - IP_SM_GW
        - SMS_ROUTER
        - DCSF
        - MRF
        - MRFP
        - MF
        - SLPKMF
        - RH
      - type: string
    NfServiceSetId:
      type: string
      description: "NF Service Set Identifier (see clause 28.12 of 3GPP TS 23.003)\
        \ formatted as the following  string \"set<Set ID>.sn<Service Name>.nfi<NF\
        \ Instance ID>.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.sn<ServiceName>.nfi<NFInstanceID>.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\"\
        \ with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)\
        \   <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3\
        \ digits. \n  If there are only 2 significant digits in the MNC, one \"0\"\
        \ digit shall be inserted \n  at the left side to fill the 3 digits coding\
        \ of MNC.  Pattern: '^[0-9]{3}$'\n<NID> encoded as defined in clause\_5.4.2\
        \ (\"Nid\" data type definition)  <NFInstanceId> encoded as defined in clause\
        \ 5.3.2  <ServiceName> encoded as defined in 3GPP TS 29.510  <Set ID> encoded\
        \ as a string of characters consisting of alphabetic \n  characters (A-Z and\
        \ a-z), digits (0-9) and/or the hyphen (-) and that shall end \n  with either\
        \ an alphabetic character or a digit.\n"
    inline_response_200:
      oneOf:
      - $ref: '#/components/schemas/NwdafRegistration'
      - $ref: '#/components/schemas/PatchResult'
  responses:
    "400":
      description: Bad request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "401":
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "403":
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "404":
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "406":
      description: 406 Not Acceptable
    "429":
      description: Too Many Requests
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "500":
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "502":
      description: Bad Gateway
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "503":
      description: Service Unavailable
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "411":
      description: Length Required
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "413":
      description: Content Too Large
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "415":
      description: Unsupported Media Type
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "307":
      description: Temporary Redirect
      headers:
        Location:
          description: The URI pointing to the resource located on the redirect target
          required: true
          schema:
            type: string
        "3gpp-Sbi-Target-Nf-Id":
          description: |
            'Identifier of target NF (service) instance towards which the request is redirected'
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RedirectResponse'
    "308":
      description: Permanent Redirect
      headers:
        Location:
          description: The URI pointing to the resource located on the redirect target
          required: true
          schema:
            type: string
        "3gpp-Sbi-Target-Nf-Id":
          description: |
            'Identifier of target NF (service) instance towards which the request is redirected'
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RedirectResponse'
    "409":
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "501":
      description: Not Implemented
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
  securitySchemes:
    oAuth2ClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "{nrfApiRoot}/oauth2/token"
          scopes:
            nudm-uecm: Access to the nudm-uecm API
            nudm_uecm:amf-registration:write: Write access (update/modify) to representations
              of the Amf3GppAccessRegistration and AmfNon3GppAccessRegistration resources
            nudm_uecm:smf-registration:write: Write access (create/delete/modify)
              to the representations of individualSmfRegistration resources
            nudm_uecm:smsf-registration:write: Write access (create/delete/modify)
              to representations of the Smsf3GppAccessRegistration and SmsfNon3GppAccessRegistration
              resources
            nudm_uecm:ip-sm-gw-registration:write: Write access (create/delete/modify)
              to the representation of the IpSmGwRegistration resource
            nudm_uecm:nwdaf-registration:write: Write access (create/delete/modify)
              to the representation of the NwdafRegistration resource
